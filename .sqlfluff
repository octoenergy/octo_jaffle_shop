[sqlfluff]
verbose = 0
nocolor = False
dialect = databricks
templater = dbt
rules = None
exclude_rules = L031, L001, L008, ST06
output_line_length = 80
runaway_limit = 10
ignore_templated_areas = True
encoding = autodetect
disable_noqa = False
# Comma separated list of file extensions to lint.
# NB: This config will only apply in the root folder.
sql_file_exts = .sql,.sql.j2,.dml,.ddl
max_line_length = 99
large_file_skip_byte_limit = 40000

[sqlfluff:indentation]
indent_unit = space
tab_space_size = 2
indented_joins = False
indented_using_on = True
template_blocks_indent = True

[sqlfluff:layout:type:binary_operator] # Keywords - migrated from L007
line_position = leading

[sqlfluff:layout:type:comma] # Migrated from L019
line_position = leading

[sqlfluff:templater]
unwrap_wrapped_queries = True

[sqlfluff:templater:dbt]
apply_dbt_builtins = True
load_macros_from_path = jaffle_shop/macros
project_dir = .

[sqlfluff:templater:dbt:context]
# DATABRICKS_TARGET=$(eval "echo ${CIRCLE_BRANCH}_ci | tr /- _")_${CIRCLE_SHA1}_$PROJECT
# tbl_name=my_table

[sqlfluff:templater:dbt:macros]
# Macros provided as builtins for dbt projects
dbt_ref = {% macro ref(model_ref) %}{{model_ref}}{% endmacro %}
dbt_source = {% macro source(source_name, table) %}{{source_name}}_{{table}}{% endmacro %}
dbt_config = {% macro config() %}{% for k in kwargs %}{% endfor %}{% endmacro %}
dbt_var = {% macro var(variable, default='') %}item{% endmacro %}
dbt_is_incremental = {% macro is_incremental() %}True{% endmacro %}

# Some rules can be configured directly from the config common to other rules.
[sqlfluff:rules]
allow_scalar = True
single_table_references = consistent
unquoted_identifiers_policy = all
indented_on_contents = False

# Some rules have their own specific config.

[sqlfluff:rules:capitalisation.keywords]
capitalisation_policy = upper
extended_capitalisation_policy = upper

[sqlfluff:rules:aliasing.table]
aliasing = explicit

[sqlfluff:rules:aliasing.column]
aliasing = explicit

[sqlfluff:rules:capitalisation.identifiers]
extended_capitalisation_policy = consistent

[sqlfluff:rules:layout.long_lines]
ignore_comment_lines = False

[sqlfluff:rules:references.from]
force_enable = False

[sqlfluff:rules:references.consistent]
force_enable = False

[sqlfluff:rules:references.keywords]
unquoted_identifiers_policy = aliases
quoted_identifiers_policy = none

[sqlfluff:rules:capitalisation.functions]  # Function names
capitalisation_policy = upper
extended_capitalisation_policy = upper

[sqlfluff:rules:convention.select_trailing_comma]
select_clause_trailing_comma = forbid

[sqlfluff:rules:capitalisation.literals]  # Null & Boolean Literals
capitalisation_policy = upper

[sqlfluff:rules:structure.subquery]
# By default, allow subqueries in from clauses, but not join clauses.
forbid_subquery_in = both

[sqlfluff:rules:convention.count_rows]  # Consistent syntax to count all rows
prefer_count_1 = False
prefer_count_0 = False

[sqlfluff:rules:convention.terminator]  # Semi-colon formatting approach.
multiline_newline = False
require_final_semicolon = False

[sqlfluff:rules:ambiguous.column_references]  # GROUP BY/ORDER BY column references.
group_by_and_order_by_style = explicit

[sqlfluff:rules:references.special_chars]  # Special characters in identifiers
unquoted_identifiers_policy = all
quoted_identifiers_policy = all
allow_space_in_identifier = False